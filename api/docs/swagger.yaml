definitions:
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.StandartError:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UserReq:
    properties:
      card:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profile_img:
        type: string
    type: object
  models.UserRes:
    properties:
      card:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: string
      password:
        type: string
      phone_number:
        type: string
      profile_img:
        type: string
      refresh_token:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  models.Users:
    properties:
      users:
        items:
          $ref: '#/definitions/models.UserRes'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  title: welcome to Booking API
  version: "1.7"
paths:
  /v1/user/{id}:
    get:
      consumes:
      - application/json
      description: Api for Get
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: Get
      tags:
      - user
  /v1/user/create:
    post:
      consumes:
      - application/json
      description: Api for Create
      parameters:
      - description: createModel
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - user
  /v1/user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Api for Delete
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StandartError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - user
  /v1/user/list/deleted:
    get:
      consumes:
      - application/json
      description: Api for ListDeletedUsers
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: ListDeletedUsers
      tags:
      - user
  /v1/user/list/users:
    get:
      consumes:
      - application/json
      description: Api for ListUsers
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Users'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: ListUsers
      tags:
      - user
  /v1/user/update:
    put:
      consumes:
      - application/json
      description: Api for Update
      parameters:
      - description: createModel
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
