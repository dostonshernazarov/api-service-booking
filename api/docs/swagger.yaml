definitions:
  models.AttractionModel:
    properties:
      attraction_id:
        type: string
      attraction_name:
        type: string
      contact_number:
        type: string
      created_at:
        type: string
      description:
        type: string
      images:
        items:
          $ref: '#/definitions/models.ImageModel'
        type: array
      licence_url:
        type: string
      location:
        $ref: '#/definitions/models.LocationModel'
      owner_id:
        type: string
      rating:
        type: number
      updated_at:
        type: string
      website_url:
        type: string
    type: object
  models.CreateAttraction:
    properties:
      attraction_name:
        default: Anhor Park
        type: string
      contact_number:
        default: +(99891)-234-56-78
        type: string
      description:
        default: available for all ages
        type: string
      images:
        items:
          $ref: '#/definitions/models.CreateImage'
        type: array
      licence_url:
        default: https://creativecommons.org/licenses/by/4.0/
        type: string
      location:
        $ref: '#/definitions/models.CreateLocation'
      rating:
        default: 4.3
        type: number
      website_url:
        default: https://creativecommons.org/licenses/by/4.1/
        type: string
    type: object
  models.CreateImage:
    properties:
      image_url:
        default: www.photo/images/141
        type: string
    type: object
  models.CreateLocation:
    properties:
      address:
        default: 87G9+V57, Shaykhontohur Street 28, Tashkent, Toshkent Shahri
        type: string
      city:
        default: Tashkent
        type: string
      country:
        default: Uzbekistan
        type: string
      latitude:
        default: 40.7128
        type: number
      longitude:
        default: 74.006
        type: number
      state_province:
        default: Shaykhontohur
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.ImageModel:
    properties:
      created_at:
        type: string
      establishment_id:
        type: string
      image_id:
        type: string
      image_url:
        type: string
      updated_at:
        type: string
    type: object
  models.LocationModel:
    properties:
      address:
        type: string
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      establishment_id:
        type: string
      latitude:
        type: number
      location_id:
        type: string
      longitude:
        type: number
      state_province:
        type: string
      updated_at:
        type: string
    type: object
  models.RegisterReq:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
  models.RegisterRes:
    properties:
      content:
        type: string
    type: object
  models.StandartError:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UserResCreate:
    properties:
      access_token:
        type: string
      birthday:
        type: string
      card:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: string
      image_url:
        type: string
      phone_num:
        type: string
      refresh_token:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/attraction/create:
    post:
      consumes:
      - application/json
      description: Api for creating attraction
      parameters:
      - description: Attraction
        in: body
        name: Attraction
        required: true
        schema:
          $ref: '#/definitions/models.CreateAttraction'
      - description: owner_id
        in: query
        name: owner_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AttractionModel'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      summary: CREATE ATTRACTION
      tags:
      - ATTRACTION
  /v1/users/code:
    get:
      consumes:
      - application/json
      description: Api for verify new password code
      parameters:
      - in: query
        name: code
        type: string
      - in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: FORGET PASSWORD CODE
      tags:
      - SET-PASSWORD
  /v1/users/login:
    get:
      consumes:
      - application/json
      description: Api for login user
      parameters:
      - in: query
        name: email
        type: string
      - in: query
        name: password
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResCreate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: LOGIN
      tags:
      - LOGIN
  /v1/users/password:
    put:
      consumes:
      - application/json
      description: Api for update new password
      parameters:
      - in: query
        name: email
        type: string
      - in: query
        name: password
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResCreate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: SET NEW PASSWORD
      tags:
      - SET-PASSWORD
  /v1/users/register:
    post:
      consumes:
      - application/json
      description: Api for register a new user
      parameters:
      - description: RegisterUser
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: REGISTER USER
      tags:
      - SIGNUP
  /v1/users/set/{id}:
    get:
      consumes:
      - application/json
      description: Api for set new password
      parameters:
      - description: EMAIL
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: FORGET PASSWORD
      tags:
      - SET-PASSWORD
  /v1/users/verify:
    get:
      consumes:
      - application/json
      description: Api for verify a new user
      parameters:
      - in: query
        name: code
        type: string
      - in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResCreate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - ApiKeyAuth: []
      summary: VERIFICATION
      tags:
      - SIGNUP
swagger: "2.0"
